/* Center the buttons on the screen */
.button-container {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh; /* Full viewport height */
  }
  
  /* Register the --a property for animating */
  @property --a { /* must register --a to animate it */
      syntax: '<angle>';
      initial-value: 0deg;
      /* used only on pseudo, nowhere to be inherited, 
       * better perf if set false, see 
       * https://www.bram.us/2024/10/03/benchmarking-the-performance-of-css-property/ */
      inherits: false
  }
  
  /* Base button styles */
  .home-page-button {
    /* hide outer part of glow */
      overflow: hidden;
    position: relative;
    background-color: white; /* Dark background */
    color: black;
    border: none;
    padding: 1rem 2rem;
    font-size: 1.2rem;
    text-transform: uppercase;
    cursor: pointer;
    border-radius: 5px;
    outline: none;
    transition: all 0.3s ease;
    z-index: 1;
    margin: 1%;
    box-shadow: 0 10px 20px 0 rgba(.5, .5, .5, 0.5), 0 10px 40px 0 rgba(.5, .5, .5, 0.5);
  }
  
  /* Inner glow effect */
  .home-page-button::before {
    content: '';
    position: absolute;
    top: -4px;
    left: -4px;
    right: -4px;
    bottom: -4px;
    /* background: linear-gradient(45deg, #ff6a00, #ffcc00); */
    /* border: solid 1em; */
    /* border-image:  */
    /* adjust gradient as needed, I just used a random palette */
    /* conic-gradient(from var(--a), rgb(101, 4, 128), white,gray) 1; */
    /* blur this pseudo */
    /* filter: blur(.01em); */
    /* tweak animation duration as necessary */
    /* animation: a 5s linear infinite; */
    /* needed so pseudo is displayed */
    border-radius: inherit;
    opacity: 0;
    z-index: -1;
    transition: opacity 0.5s ease-in-out;
    
  }
  
  /* On hover, show inner glow effect */
  .home-page-button:before {
    opacity: 1;
    filter: blur(9px);
  }
  
  /* Optional: Add hover effect to scale the button slightly */
  .home-page-button:hover {
    transform: scale(1.05);
  }
  
  /* animate --a from its initial-value 0deg to 1turn */
  @keyframes a { to { --a: 1turn } }
  
  .make-picks-button {
    background-color: #ff6f61;
    color: white;
    font-size: 1.2rem;
    padding: 10px 20px;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    transition: background-color 0.3s ease;
  }
  
  .make-picks-button:hover {
    background-color: #ff4f41;
  }
  
  .glowing-button {
    margin: 2% 0 0 2%;
    display: inline-block;
    padding: 10px 20px;
    font-size: 16px;
    font-weight: bold;
    color: white;
    background-color: #ff4500; /* Orange color */
    border: none;
    border-radius: 5px;
    cursor: pointer;
    box-shadow: 0 0 1px #ff4500, 0 0 5px #ff4500, 0 0 10px #ff4500;
    transition: box-shadow 0.3s ease, transform 0.3s ease;
  }
  
  .glowing-button:hover {
    box-shadow: 0 0 10px #ff6347, 0 0 20px #ff6347, 0 0 40px #ff6347;
    transform: scale(1.1); /* Slightly enlarge on hover */
  }
  
  .glowing-button:focus {
    outline: none;
  }
  
  .glowing-button:active {
    transform: scale(1); /* Reset size on click */
  }